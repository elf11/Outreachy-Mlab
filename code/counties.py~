# -*- coding: utf-8 -*-
"""
Created on Fri Jun  5 11:59:54 2015

@author: oana
"""
import urllib2
import requests
import pandas as pd

data_df = pd.read_csv('national_county.txt', converters={'statefp': lambda x: str(x), 'countyfp': lambda x: str(x)})

counties = []
for index, row in data_df.iterrows():
    code = row['statefp'] + row['countyfp']
    counties.append(code)

lencounties = len(counties)

call_count = []
i = 0
# call the api using a size of 10 counties / batch
while i < lencounties - 10:
    batch = []
    for j in range (0,10):
        batch.append(counties[i])
        i = i + 1
    call_count.append(batch)

sum_list = []
demo_list = []    
for batch in call_count:
    url = 'http://www.broadbandmap.gov/broadbandmap/analyze/jun2014/summary/population/county/ids/'
    url_demo = 'http://www.broadbandmap.gov/broadbandmap/demographic/jun2014/county/ids/'
    for county in batch:
        url = url + str(county) + ','
        url_demo = url_demo + str(county) + ','
    url = url + '?format=json'
    url_demo = url_demo + '?format=json'
    try:
        data_json = requests.get(url).json()
        sum_list.append(data_json)
        data_json = requests.get(url_demo).json()
        demo_list.append(data_json)
    except urllib2.URLError, e:
        print 'No kittez. Got an error code:', e


broad_df = pd.DataFrame(sum_list[0]['Results'])
demo_df = pd.DataFrame(demo_list[0]['Results'])
len_broad = len(sum_list)
print "len_broad"
print len_broad
len_demo = len(demo_list)
print "len_demo"
print len_demo
i = 1

while i < len_broad:
    broad_df = broad_df.append(sum_list[i]['Results'], ignore_index=True)
    i = i + 1

broad_df.to_csv('broad_sum.csv', encoding='utf-8')
#print broad_df.head(5)

i = 1
while i < len_demo:
    demo_df = demo_df.append(demo_list[i]['Results'], ignore_index=True)
    i = i + 1

demo_df.to_csv('demo.csv', encoding='utf-8')
#print demo_df.head(5)

#states_df = pd.read_csv('states.csv')

#counties_df = pd.merge(data_df, states_df, left_on=['stateabb'], right_on=['stateabb'])

#print counties_df.head()
#counties_df.to_csv('out.csv')

# API call for county and result in JSON format
# http://www.broadbandmap.gov/broadbandmap/demographic/dec2012/county/ids/01001?format=json
# {"status":"OK","responseTime":255,"message":[],"Results":[{"geographyId":"01001","geographyName":"Autauga","landArea":586.26899165,"population":56862,"households":22879,"raceWhite":0.81160,"raceBlack":0.16840,"raceHispanic":0.01490,"raceAsian":0.00460,"raceNativeAmerican":0.00060,"incomeBelowPoverty":0.11900,"medianIncome":57100.24010,"incomeLessThan25":0.20800,"incomeBetween25to50":0.30450,"incomeBetween50to100":0.35510,"incomeBetween100to200":0.16470,"incomeGreater200":0.01480,"educationHighSchoolGraduate":0.80640,"educationBachelorOrGreater":0.20090,"ageUnder5":0.05360,"ageBetween5to19":0.23080,"ageBetween20to34":0.20200,"ageBetween35to59":0.32250,"ageGreaterThan60":0.19120,"myAreaIndicator":false}]}
#
#

#url = 'http://www.broadbandmap.gov/broadbandmap/demographic/jun2014/county/ids/01001,01003,01005,01007,01009,01011,01013,01015?format=json'
#url2 = 'http://www.broadbandmap.gov/broadbandmap/demographic/jun2014/county/ids/01001,01003,01005,01007,01009,01011,01013,01015?format=json'

#req = urllib2.Request(url)
#user_agent = 'Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)'
#req = urllib2.Request(url, headers={ 'User-Agent' : user_agent })
#print url


#data_list = []

#data_json = requests.get(url).json()
#data_list.append(data_json)
#print data_json
#data_json2 = requests.get(url2).json()
#data_list.append(data_json2)
#print data_json2

#data = pd.DataFrame(data_json['Results'])
#print data.head(5)
#data.append(pd.DataFrame(data_json2['Results']))
#print data.head(5)

#data = pd.DataFrame(dt['Results'] for dt in data_list)
#print data.head(5)

#print data.head(5)

#try:
#    response = urllib2.urlopen(req)
#    kittens = response.read()
#    print kittens
#except urllib2.URLError, e:
#    print 'No kittez. Got an error code:', e

#fileobj = urllib2.urlopen(url)
#print url
#print fileobj
#allResponse = json.loads(fileobj.read())

#fileobj = urllib2.urlopen('http://www.broadbandmap.gov/broadbandmap/analyze/jun2014/summary/population/county/ids/01001,?format=json')
#allResponse = json.loads(fileobj.read())

#print allResponse

#df_ct = pd.read_json(allResponse)

#print df_ct